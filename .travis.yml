# Continious Integration Configuration File for KURI MBZIRC Challenge 3 Package
# Author: Tarek Taha
# Date  : 29/05/2016
sudo: required
dist: trusty
language: generic
python:
  - "2.7"
compiler:
  - gcc
notifications:
  email:
    recipients:
    - tarek.taha@gmail.com
    on_success: change #[always|never|change] # default: change
    on_failure: change #[always|never|change] # default: always

env:
  global:
    # Some Global variables can go here
    - GLOBAL_VAR="global_var"
  matrix:
    - ROS_DISTRO="indigo" ROS_REPOSITORY_PATH=http://packages.ros.org/ros/ubuntu
    #- ROS_DISTRO="jade"   ROS_REPOSITORY_PATH=http://packages.ros.org/ros/ubuntu
# Install prerequisites and/or dependencies required by the system
before_install: 
  - cmake --version
  - find /usr/share -iname "*Eigen*.cmake"
  - export CI_SOURCE_PATH=$(pwd)
  - export REPOSITORY_NAME=${PWD##*/}
  - echo "Testing branch $TRAVIS_BRANCH of $REPOSITORY_NAME on $ROS_DISTRO"
  - sudo -E sh -c 'echo "deb $ROS_REPOSITORY_PATH `lsb_release -cs` main" > /etc/apt/sources.list.d/ros-latest.list'
  - sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
  - sudo apt-get update -qq
  - sudo apt-get install -qq -y dpkg
  - sudo apt-get install -qq -y python-rosdep python-wstool python-catkin-tools python-catkin-pkg 
  - sudo apt-get install -qq -y xvfb ros-$ROS_DISTRO-xacro
  - sudo apt-get install -qq -y xvfb ros-$ROS_DISTRO-desktop-full
  - sudo apt-get install -y libcgal-dev
  - sudo rosdep init
  - rosdep update
  # attempting to solve the error introduced by opencv2 : libdc1394 error: Failed to initialize libdc1394
  - sudo ln /dev/null /dev/raw1394
# Use this to install any prerequisites or dependencies necessary to run your build
install: 
  # Create workspace
  - mkdir -p ~/catkin_ws/src/
  - cd ~/catkin_ws
  - wstool init src
  - wstool merge -t src https://raw.githubusercontent.com/kuri-kustar/kuri_mbzirc_challenge_3/master/mbzirc_challenge3.rosinstall
  - wstool update -t src
  - rosdep install -y -r --from-paths src --ignore-src --rosdistro $ROS_DISTRO
  - sudo apt-get install -qq -y ros-$ROS_DISTRO-costmap-2d ros-$ROS_DISTRO-cv-bridge 
  - sudo apt-get install -qq -y ros-$ROS_DISTRO-octomap ros-$ROS_DISTRO-octomap-msgs ros-$ROS_DISTRO-octomap-server
  - sudo apt-get install -qq -y ros-$ROS_DISTRO-gazebo-ros ros-$ROS_DISTRO-mavros ros-$ROS_DISTRO-mavros-msgs ros-$ROS_DISTRO-filters 
  - sudo apt-get install -qq -y ros-$ROS_DISTRO-image-transport ros-$ROS_DISTRO-cmake-modules ros-$ROS_DISTRO-roslint ros-$ROS_DISTRO-rviz
  - sudo apt-get install -qq -y ros-$ROS_DISTRO-rviz-visual-tools
  - cd ~
  - git clone https://github.com/PX4/Firmware.git
  - cd ~/Firmware
  - git checkout v1.6.3
  - make posix_sitl_default && no_sim=1 make posix_sitl_default sitl_gazebo
# Use this to prepare your build for testing e.g. copy database configurations, environment variables, etc.
before_script: 
- source /opt/ros/$ROS_DISTRO/setup.bash
# All commands must exit with code 0 on success. Anything else is considered failure
script:
  - cd ~/catkin_ws
  - catkin_make -DCATKIN_WHITELIST_PACKAGES="catkin_simple"
  - catkin_make -DCATKIN_WHITELIST_PACKAGES="gflags_catkin"
  - cp src/glog_catkin/fix-unused-typedef-warning.patch src/
  - catkin_make -DCATKIN_WHITELIST_PACKAGES="glog_catkin"
  - catkin_make -DCATKIN_WHITELIST_PACKAGES="eigen_catkin"
  - catkin_make -DCATKIN_WHITELIST_PACKAGES="eigen_checks"
  - catkin_make -DCATKIN_WHITELIST_PACKAGES="minkindr"
  - catkin_make -DCATKIN_WHITELIST_PACKAGES=""
  - catkin_make
  - source devel/setup.bash
  - rospack profile
  - cd ~/Firmware
  - source Tools/setup_gazebo.bash $(pwd) $(pwd)/build_posix_sitl_default
  - export ROS_PACKAGE_PATH=$ROS_PACKAGE_PATH:$(pwd)
  - export ROS_PACKAGE_PATH=$ROS_PACKAGE_PATH:$(pwd)/Tools/sitl_gazebo
#- xvfb-run -a --server-args="-screen 0 800x600x24" catkin_make run_tests_kuri_mbzirc_challenge_3
# - catkin_test_results build/test_results/kuri_mbzirc_challenge_3 --verbose --all
